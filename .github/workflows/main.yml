name: Build, push, and deploy

on: [push]

env:
  IMAGE: ghcr.io/${{ github.repository }}/modiapersonoversikt-skrivestotte:${{ github.sha }}
  CI: true
  TZ: Europe/Oslo
jobs:
  build:
    name: Test and build
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/dev' && github.ref != 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-        
          continue-on-error: true  
      - name: Build
        run:  ./gradlew build

  build-and-push:
    name: Build and push Docker container
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
        continue-on-error: true
      - name: Build
        run: ./gradlew build
      - name: Publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} .
          docker login ghcr.io -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}
  deploy-qa:
    name: Deploy to preprod
    needs: build-and-push
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          PRINT_PAYLOAD: true
          CLUSTER: dev-fss
          RESOURCE: .nais/qa-template.yaml

  deploy-prod:
    name: Deploy to prod
    needs: build-and-push
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          PRINT_PAYLOAD: true
          CLUSTER: prod-fss
          RESOURCE: .nais/prod.yaml
