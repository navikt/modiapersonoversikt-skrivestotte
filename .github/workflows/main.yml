name: Build, push, and deploy

on: [push]

env:
  CI: true
  TZ: Europe/Oslo
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  permissions:
    packages: write
    contents: read
    id-token: write

  build:
    name: Test and build
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/dev' && github.ref != 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
          cache: 'gradle'
      - name: Build
        run:  ./gradlew build

  build-and-push:
    name: Build and push Docker container
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
          cache: 'gradle'
      - name: Build
        run: ./gradlew build
      - name: Publish Docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: personoversikt
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  deploy-qa:
    name: Deploy to preprod
    needs: build-and-push
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          PRINT_PAYLOAD: true
          CLUSTER: dev-fss
          RESOURCE: .nais/qa-template.yaml
          VAR: image=${{ needs.build-and-push.outputs.image }}

  deploy-prod:
    name: Deploy to prod
    needs: build-and-push
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          PRINT_PAYLOAD: true
          CLUSTER: prod-fss
          RESOURCE: .nais/prod.yaml
          VAR: image=${{ needs.build-and-push.outputs.image }}
