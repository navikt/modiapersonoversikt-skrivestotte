/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TeksterImport } from './routes/tekster'
import { Route as IndexImport } from './routes/index'
import { Route as TeksterIndexImport } from './routes/tekster/index'
import { Route as TeksterNyImport } from './routes/tekster/ny'
import { Route as TeksterTextIdImport } from './routes/tekster/$textId'

// Create/Update Routes

const TeksterRoute = TeksterImport.update({
  path: '/tekster',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TeksterIndexRoute = TeksterIndexImport.update({
  path: '/',
  getParentRoute: () => TeksterRoute,
} as any)

const TeksterNyRoute = TeksterNyImport.update({
  path: '/ny',
  getParentRoute: () => TeksterRoute,
} as any)

const TeksterTextIdRoute = TeksterTextIdImport.update({
  path: '/$textId',
  getParentRoute: () => TeksterRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/tekster': {
      preLoaderRoute: typeof TeksterImport
      parentRoute: typeof rootRoute
    }
    '/tekster/$textId': {
      preLoaderRoute: typeof TeksterTextIdImport
      parentRoute: typeof TeksterImport
    }
    '/tekster/ny': {
      preLoaderRoute: typeof TeksterNyImport
      parentRoute: typeof TeksterImport
    }
    '/tekster/': {
      preLoaderRoute: typeof TeksterIndexImport
      parentRoute: typeof TeksterImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  TeksterRoute.addChildren([
    TeksterTextIdRoute,
    TeksterNyRoute,
    TeksterIndexRoute,
  ]),
])

/* prettier-ignore-end */
